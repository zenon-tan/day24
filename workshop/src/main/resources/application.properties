spring.datasource.url=jdbc:mysql://localhost:3306/shensang
spring.datasource.username=root
spring.datasource.password=
#old driver 
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#new driver
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# https://docs.spring.io/spring-boot/docs/2.1.13.RELEASE/reference/html/boot-features-sql.html

# Railway setup:
# Create Mysql database and set variables (same as redis)
# Go to my aql workench, send to mysql editor -> create statement
# Create a new connection for railway and log in on workbench, with hostname, port, user, pw
# Test connection
# Login and create the tables inside the railway database
# if a non-root user is needed, create a new user with same privileges as root
# create a new variable file in railway
# change the properties file to fit the new user
# ***IMPORTANT*** url: jdbc:mysql://........../railway for the railway database

# old driver```<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
# <dependency>
#     <groupId>mysql</groupId>
#     <artifactId>mysql-connector-java</artifactId>
#     <version>8.0.32</version>
# </dependency>
# ```
# ðŸ¤” 
# new driver ```<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
# <dependency>
#     <groupId>com.mysql</groupId>
#     <artifactId>mysql-connector-j</artifactId>
#     <version>8.0.32</version>
# </dependency>```

#Railway Settings
#IF NON ROOT, HAVE TO BE CREATED IN RAILWAY
#***************IMPORTANT************************
# spring.datasource.url=jdbc:mysql://...../railway
#************************************************
# spring.datasource.username=${MYSQL_APP_USER}
# spring.datasource.password=${MYSQL_APP_PW}
# #old driver 
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#new driver
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Railway Settings
# spring.datasource.url=jdbc:mysql://...../railway
# spring.datasource.username=${MYSQL_APP_USER}
# spring.datasource.password=${MYSQL_APP_PW}